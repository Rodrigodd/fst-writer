name: fst writer tests

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - name: Update Rust to ${{ matrix.toolchain }}
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose

  examples:
    name: Test Examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - name: Update Rust to ${{ matrix.toolchain }}
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose --examples
      - name: Convert a VCD
        run: cargo run --verbose --example 2fst -- test-inputs/SPI_Write.vcd SPI_Write.vcd.fst

  lint:
    name: Clippy Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - name: Update Rust to ${{ matrix.toolchain }}
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Install Clippy
        run: rustup component add clippy
      - uses: actions/checkout@v4
      - name: Run Lint
        run: RUSTFLAGS="-Dwarnings" cargo clippy


  fmt:
    name: Check Formating
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - name: Update Rust to ${{ matrix.toolchain }}
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - uses: actions/checkout@v4
      - name: Run cargo fmt
        run: cargo fmt --all -- --check


  semver:
    name: Check Semantic Versioning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: obi1kenobi/cargo-semver-checks-action@v2

  msrv:
    name: Check Minimum Rust Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: cargo-msrv
      - name: Check MSRV
        run: cargo msrv verify
